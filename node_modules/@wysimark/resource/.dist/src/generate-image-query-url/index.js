"use strict";
/**
 * Takes an existing image URL and return a new URL o fthe image resized to
 * the width/height in the arguments.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateImageQueryUrl = void 0;
const get_filename_info_1 = require("../get-filename-info");
const utils_1 = require("../utils");
/**
 * Takes an existing URL and generates a new URL reflecting that the image
 * size was changed.
 */
function generateImageQueryUrl(url, { width, height }) {
    const urlInfo = new URL(url);
    const filename = (0, utils_1.extractFilename)(urlInfo.pathname);
    const filenameInfo = (0, get_filename_info_1.getFilenameInfo)(filename);
    if (filenameInfo.type !== "image") {
        throw new Error(`Invalid image url ${JSON.stringify(url)}`);
    }
    if (width > filenameInfo.width || height > filenameInfo.height) {
        throw new Error(`Resize image ${width}x${height} is larger than original ${filenameInfo.width}x${filenameInfo.height}`);
    }
    const querystring = (0, utils_1.getSortedQueryString)(new URLSearchParams({ size: `${width}x${height}` }));
    return `${urlInfo.origin}${urlInfo.pathname}?${querystring}`;
}
exports.generateImageQueryUrl = generateImageQueryUrl;
